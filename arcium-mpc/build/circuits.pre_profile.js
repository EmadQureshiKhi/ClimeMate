var pre_profile = { 'code':
{"source_file":"use arcis_imports::*;\n\n#[encrypted]\nmod circuits {\n    use arcis_imports::*;\n\n    // ============================================================================\n    // Emissions Certificate Operations\n    // ============================================================================\n\n    /// Tracks encrypted emissions data for a certificate\n    pub struct EmissionsData {\n        scope1: u64,\n        scope2: u64,\n        scope3: u64,\n        total: u64,\n    }\n\n    /// Initializes encrypted emissions certificate\n    ///\n    /// Creates an EmissionsData structure with the provided values.\n    /// All data remains encrypted and can only be accessed through MPC operations.\n    #[instruction]\n    pub fn init_emissions_certificate(mxe: Mxe) -> Enc<Mxe, EmissionsData> {\n        let emissions = EmissionsData {\n            scope1: 0,\n            scope2: 0,\n            scope3: 0,\n            total: 0,\n        };\n        mxe.from_arcis(emissions)\n    }\n\n    /// Updates encrypted emissions certificate with new data\n    ///\n    /// Takes encrypted emissions data and stores it in the MXE.\n    #[instruction]\n    pub fn update_emissions(\n        emissions_ctxt: Enc<Shared, EmissionsData>,\n        stored_ctxt: Enc<Mxe, EmissionsData>,\n    ) -> Enc<Mxe, EmissionsData> {\n        let emissions = emissions_ctxt.to_arcis();\n        \n        // Update stored emissions\n        stored_ctxt.owner.from_arcis(emissions)\n    }\n\n    /// Proves emissions are below threshold without revealing actual value\n    ///\n    /// Compares total emissions against a threshold in encrypted space.\n    /// Only the boolean result is revealed, not the actual emissions value.\n    ///\n    /// # Arguments\n    /// * `emissions_ctxt` - Encrypted emissions data\n    /// * `threshold` - Maximum allowed emissions\n    ///\n    /// # Returns\n    /// * `true` if emissions are at or below threshold\n    /// * `false` if emissions exceed threshold\n    #[instruction]\n    pub fn prove_threshold(\n        emissions_ctxt: Enc<Mxe, EmissionsData>,\n        threshold: u64,\n    ) -> bool {\n        let emissions = emissions_ctxt.to_arcis();\n        (emissions.total <= threshold).reveal()\n    }\n\n    // ============================================================================\n    // SEMA Report Operations\n    // ============================================================================\n\n    /// Tracks encrypted SEMA compliance data\n    pub struct SEMAReport {\n        stakeholder_count: u32,\n        material_topic_count: u32,\n        compliance_score: u64,\n        total_score: u64,\n    }\n\n    /// Initializes encrypted SEMA report\n    ///\n    /// Creates a SEMAReport structure with zero values.\n    /// All data remains encrypted for privacy-preserving compliance tracking.\n    #[instruction]\n    pub fn init_sema_report(mxe: Mxe) -> Enc<Mxe, SEMAReport> {\n        let report = SEMAReport {\n            stakeholder_count: 0,\n            material_topic_count: 0,\n            compliance_score: 0,\n            total_score: 0,\n        };\n        mxe.from_arcis(report)\n    }\n\n    /// Updates encrypted SEMA report with new data\n    ///\n    /// Takes encrypted SEMA data and stores it in the MXE.\n    #[instruction]\n    pub fn update_sema_report(\n        report_ctxt: Enc<Shared, SEMAReport>,\n        stored_ctxt: Enc<Mxe, SEMAReport>,\n    ) -> Enc<Mxe, SEMAReport> {\n        let report = report_ctxt.to_arcis();\n        \n        // Update stored report\n        stored_ctxt.owner.from_arcis(report)\n    }\n\n    /// Proves SEMA compliance without revealing score\n    ///\n    /// Compares compliance score against a threshold in encrypted space.\n    /// Only the boolean result is revealed, not the actual score.\n    ///\n    /// # Arguments\n    /// * `report_ctxt` - Encrypted SEMA report\n    /// * `threshold` - Minimum required compliance score\n    ///\n    /// # Returns\n    /// * `true` if compliance score meets or exceeds threshold\n    /// * `false` if compliance score is below threshold\n    #[instruction]\n    pub fn prove_sema_compliance(\n        report_ctxt: Enc<Mxe, SEMAReport>,\n        threshold: u64,\n    ) -> bool {\n        let report = report_ctxt.to_arcis();\n        (report.compliance_score >= threshold).reveal()\n    }\n\n    // ============================================================================\n    // Utility Operations\n    // ============================================================================\n\n    /// Calculates carbon offset percentage privately\n    ///\n    /// Computes what percentage of total emissions have been offset by retired credits.\n    /// The calculation happens in encrypted space, result can be revealed or kept encrypted.\n    ///\n    /// # Arguments\n    /// * `total_emissions` - Total emissions value\n    /// * `retired_credits` - Amount of carbon credits retired\n    ///\n    /// # Returns\n    /// Percentage of emissions offset (multiplied by 100 for precision)\n    #[instruction]\n    pub fn calculate_offset_percentage(\n        total_emissions: u64,\n        retired_credits: u64,\n    ) -> u64 {\n        if total_emissions > 0 {\n            (retired_credits * 100) / total_emissions\n        } else {\n            0\n        }\n    }\n\n    // ============================================================================\n    // Test/Example Operations\n    // ============================================================================\n\n    /// Simple test structure for validation\n    pub struct InputValues {\n        v1: u8,\n        v2: u8,\n    }\n\n    /// Simple addition test for MPC validation\n    ///\n    /// Adds two encrypted values and returns the encrypted result.\n    /// Used for testing the MPC circuit functionality.\n    #[instruction]\n    pub fn add_together(input: Enc<Shared, InputValues>) -> Enc<Shared, u16> {\n        let v = input.to_arcis();\n        let sum = v.v1 as u16 + v.v2 as u16;\n        input.owner.from_arcis(sum)\n    }\n}\n","code":[{"code":"0","region":{"Known":[{"line":25,"column":20},{"line":25,"column":21}]}},{"code":"0","region":{"Known":[{"line":26,"column":20},{"line":26,"column":21}]}},{"code":"0","region":{"Known":[{"line":27,"column":20},{"line":27,"column":21}]}},{"code":"0","region":{"Known":[{"line":28,"column":19},{"line":28,"column":20}]}},{"code":"let emissions = EmissionsData\n{ scope1 : 0, scope2 : 0, scope3 : 0, total : 0, };","region":{"Known":[{"line":24,"column":8},{"line":29,"column":10}]}},{"code":"emissions","region":{"Known":[{"line":30,"column":23},{"line":30,"column":32}]}},{"code":"self.nonce += 1;","region":"Unknown"},{"code":"self","region":"Unknown"},{"code":"a","region":"Unknown"},{"code":"a","region":"Unknown"},{"code":"self.from_arcis_inner(a)","region":"Unknown"},{"code":"a","region":"Unknown"},{"code":"let phantom = [a; 0];","region":"Unknown"},{"code":"data","region":"Unknown"},{"code":"phantom","region":"Unknown"},{"code":"let data = EncData { data, phantom };","region":"Unknown"},{"code":"owner","region":"Unknown"},{"code":"data","region":"Unknown"},{"code":"Self { owner, data }","region":"Unknown"},{"code":"Enc :: new_inner(self, a, self.from_arcis_inner(a))","region":"Unknown"},{"code":"mxe.from_arcis(emissions)","region":{"Known":[{"line":30,"column":8},{"line":30,"column":33}]}},{"code":"self.owner","region":"Unknown"},{"code":"self.data","region":"Unknown"},{"code":"Self :: __arcis_inner(self.owner, self.data)","region":"Unknown"},{"code":"let emissions = emissions_ctxt.to_arcis();","region":{"Known":[{"line":41,"column":8},{"line":41,"column":50}]}},{"code":"emissions","region":{"Known":[{"line":44,"column":37},{"line":44,"column":46}]}},{"code":"stored_ctxt.owner.from_arcis(emissions)","region":{"Known":[{"line":44,"column":8},{"line":44,"column":47}]}},{"code":"let emissions = emissions_ctxt.to_arcis();","region":{"Known":[{"line":64,"column":8},{"line":64,"column":50}]}},{"code":"emissions.total <= threshold","region":{"Known":[{"line":65,"column":9},{"line":65,"column":37}]}},{"code":"(emissions.total <= threshold).reveal()","region":{"Known":[{"line":65,"column":8},{"line":65,"column":47}]}},{"code":"0","region":{"Known":[{"line":87,"column":31},{"line":87,"column":32}]}},{"code":"0","region":{"Known":[{"line":88,"column":34},{"line":88,"column":35}]}},{"code":"0","region":{"Known":[{"line":89,"column":30},{"line":89,"column":31}]}},{"code":"0","region":{"Known":[{"line":90,"column":25},{"line":90,"column":26}]}},{"code":"let report = SEMAReport\n{\n    stakeholder_count : 0, material_topic_count : 0, compliance_score : 0,\n    total_score : 0,\n};","region":{"Known":[{"line":86,"column":8},{"line":91,"column":10}]}},{"code":"report","region":{"Known":[{"line":92,"column":23},{"line":92,"column":29}]}},{"code":"mxe.from_arcis(report)","region":{"Known":[{"line":92,"column":8},{"line":92,"column":30}]}},{"code":"let report = report_ctxt.to_arcis();","region":{"Known":[{"line":103,"column":8},{"line":103,"column":44}]}},{"code":"report","region":{"Known":[{"line":106,"column":37},{"line":106,"column":43}]}},{"code":"stored_ctxt.owner.from_arcis(report)","region":{"Known":[{"line":106,"column":8},{"line":106,"column":44}]}},{"code":"let report = report_ctxt.to_arcis();","region":{"Known":[{"line":126,"column":8},{"line":126,"column":44}]}},{"code":"report.compliance_score >= threshold","region":{"Known":[{"line":127,"column":9},{"line":127,"column":45}]}},{"code":"(report.compliance_score >= threshold).reveal()","region":{"Known":[{"line":127,"column":8},{"line":127,"column":55}]}},{"code":"total_emissions > 0","region":{"Known":[{"line":150,"column":11},{"line":150,"column":30}]}},{"code":"0","region":{"Known":[{"line":153,"column":12},{"line":153,"column":13}]}},{"code":"retired_credits * 100","region":{"Known":[{"line":151,"column":13},{"line":151,"column":34}]}},{"code":"(retired_credits * 100) / total_emissions","region":{"Known":[{"line":151,"column":12},{"line":151,"column":53}]}},{"code":"if total_emissions > 0 { (retired_credits * 100) / total_emissions } else\n{ 0 }","region":{"Known":[{"line":150,"column":8},{"line":154,"column":9}]}},{"code":"let v = input.to_arcis();","region":{"Known":[{"line":173,"column":8},{"line":173,"column":33}]}},{"code":"let sum = v.v1 as u16 + v.v2 as u16;","region":{"Known":[{"line":174,"column":8},{"line":174,"column":44}]}},{"code":"sum","region":{"Known":[{"line":175,"column":31},{"line":175,"column":34}]}},{"code":"self.nonce += 1;","region":"Unknown"},{"code":"self","region":"Unknown"},{"code":"a","region":"Unknown"},{"code":"a","region":"Unknown"},{"code":"self.from_arcis_inner(a)","region":"Unknown"},{"code":"Enc :: new_inner(self, a, self.from_arcis_inner(a))","region":"Unknown"},{"code":"input.owner.from_arcis(sum)","region":{"Known":[{"line":175,"column":8},{"line":175,"column":35}]}}]}
, 'instructions':
{"prove_sema_compliance":{"profilees":[{"code_idx":21,"before_size_id":0,"after_size_id":0},{"code_idx":22,"before_size_id":0,"after_size_id":1},{"code_idx":23,"before_size_id":0,"after_size_id":2},{"code_idx":40,"before_size_id":0,"after_size_id":2},{"code_idx":41,"before_size_id":2,"after_size_id":3},{"code_idx":42,"before_size_id":2,"after_size_id":4}]},"init_emissions_certificate":{"profilees":[{"code_idx":0,"before_size_id":0,"after_size_id":0},{"code_idx":1,"before_size_id":0,"after_size_id":0},{"code_idx":2,"before_size_id":0,"after_size_id":0},{"code_idx":3,"before_size_id":0,"after_size_id":0},{"code_idx":4,"before_size_id":0,"after_size_id":0},{"code_idx":5,"before_size_id":0,"after_size_id":0},{"code_idx":6,"before_size_id":0,"after_size_id":1},{"code_idx":7,"before_size_id":1,"after_size_id":1},{"code_idx":8,"before_size_id":1,"after_size_id":1},{"code_idx":9,"before_size_id":1,"after_size_id":1},{"code_idx":10,"before_size_id":1,"after_size_id":2},{"code_idx":11,"before_size_id":2,"after_size_id":2},{"code_idx":12,"before_size_id":2,"after_size_id":2},{"code_idx":13,"before_size_id":2,"after_size_id":2},{"code_idx":14,"before_size_id":2,"after_size_id":2},{"code_idx":15,"before_size_id":2,"after_size_id":2},{"code_idx":16,"before_size_id":2,"after_size_id":2},{"code_idx":17,"before_size_id":2,"after_size_id":2},{"code_idx":18,"before_size_id":2,"after_size_id":2},{"code_idx":19,"before_size_id":1,"after_size_id":2},{"code_idx":20,"before_size_id":0,"after_size_id":2}]},"update_emissions":{"profilees":[{"code_idx":21,"before_size_id":0,"after_size_id":0},{"code_idx":22,"before_size_id":0,"after_size_id":1},{"code_idx":23,"before_size_id":0,"after_size_id":2},{"code_idx":24,"before_size_id":0,"after_size_id":2},{"code_idx":25,"before_size_id":2,"after_size_id":2},{"code_idx":6,"before_size_id":2,"after_size_id":3},{"code_idx":7,"before_size_id":3,"after_size_id":3},{"code_idx":8,"before_size_id":3,"after_size_id":3},{"code_idx":9,"before_size_id":3,"after_size_id":3},{"code_idx":10,"before_size_id":3,"after_size_id":4},{"code_idx":11,"before_size_id":4,"after_size_id":4},{"code_idx":12,"before_size_id":4,"after_size_id":4},{"code_idx":13,"before_size_id":4,"after_size_id":4},{"code_idx":14,"before_size_id":4,"after_size_id":4},{"code_idx":15,"before_size_id":4,"after_size_id":4},{"code_idx":16,"before_size_id":4,"after_size_id":4},{"code_idx":17,"before_size_id":4,"after_size_id":4},{"code_idx":18,"before_size_id":4,"after_size_id":4},{"code_idx":19,"before_size_id":3,"after_size_id":4},{"code_idx":26,"before_size_id":2,"after_size_id":4}]},"add_together":{"profilees":[{"code_idx":21,"before_size_id":0,"after_size_id":0},{"code_idx":22,"before_size_id":0,"after_size_id":1},{"code_idx":23,"before_size_id":0,"after_size_id":2},{"code_idx":48,"before_size_id":0,"after_size_id":2},{"code_idx":49,"before_size_id":2,"after_size_id":3},{"code_idx":50,"before_size_id":3,"after_size_id":3},{"code_idx":51,"before_size_id":3,"after_size_id":4},{"code_idx":52,"before_size_id":4,"after_size_id":4},{"code_idx":53,"before_size_id":4,"after_size_id":4},{"code_idx":54,"before_size_id":4,"after_size_id":4},{"code_idx":55,"before_size_id":4,"after_size_id":5},{"code_idx":11,"before_size_id":5,"after_size_id":5},{"code_idx":12,"before_size_id":5,"after_size_id":5},{"code_idx":13,"before_size_id":5,"after_size_id":5},{"code_idx":14,"before_size_id":5,"after_size_id":5},{"code_idx":15,"before_size_id":5,"after_size_id":5},{"code_idx":16,"before_size_id":5,"after_size_id":5},{"code_idx":17,"before_size_id":5,"after_size_id":5},{"code_idx":18,"before_size_id":5,"after_size_id":5},{"code_idx":56,"before_size_id":4,"after_size_id":5},{"code_idx":57,"before_size_id":3,"after_size_id":5}]},"init_sema_report":{"profilees":[{"code_idx":30,"before_size_id":0,"after_size_id":0},{"code_idx":31,"before_size_id":0,"after_size_id":0},{"code_idx":32,"before_size_id":0,"after_size_id":0},{"code_idx":33,"before_size_id":0,"after_size_id":0},{"code_idx":34,"before_size_id":0,"after_size_id":0},{"code_idx":35,"before_size_id":0,"after_size_id":0},{"code_idx":6,"before_size_id":0,"after_size_id":1},{"code_idx":7,"before_size_id":1,"after_size_id":1},{"code_idx":8,"before_size_id":1,"after_size_id":1},{"code_idx":9,"before_size_id":1,"after_size_id":1},{"code_idx":10,"before_size_id":1,"after_size_id":2},{"code_idx":11,"before_size_id":2,"after_size_id":2},{"code_idx":12,"before_size_id":2,"after_size_id":2},{"code_idx":13,"before_size_id":2,"after_size_id":2},{"code_idx":14,"before_size_id":2,"after_size_id":2},{"code_idx":15,"before_size_id":2,"after_size_id":2},{"code_idx":16,"before_size_id":2,"after_size_id":2},{"code_idx":17,"before_size_id":2,"after_size_id":2},{"code_idx":18,"before_size_id":2,"after_size_id":2},{"code_idx":19,"before_size_id":1,"after_size_id":2},{"code_idx":36,"before_size_id":0,"after_size_id":2}]},"update_sema_report":{"profilees":[{"code_idx":21,"before_size_id":0,"after_size_id":0},{"code_idx":22,"before_size_id":0,"after_size_id":1},{"code_idx":23,"before_size_id":0,"after_size_id":2},{"code_idx":37,"before_size_id":0,"after_size_id":2},{"code_idx":38,"before_size_id":2,"after_size_id":2},{"code_idx":6,"before_size_id":2,"after_size_id":3},{"code_idx":7,"before_size_id":3,"after_size_id":3},{"code_idx":8,"before_size_id":3,"after_size_id":3},{"code_idx":9,"before_size_id":3,"after_size_id":3},{"code_idx":10,"before_size_id":3,"after_size_id":4},{"code_idx":11,"before_size_id":4,"after_size_id":4},{"code_idx":12,"before_size_id":4,"after_size_id":4},{"code_idx":13,"before_size_id":4,"after_size_id":4},{"code_idx":14,"before_size_id":4,"after_size_id":4},{"code_idx":15,"before_size_id":4,"after_size_id":4},{"code_idx":16,"before_size_id":4,"after_size_id":4},{"code_idx":17,"before_size_id":4,"after_size_id":4},{"code_idx":18,"before_size_id":4,"after_size_id":4},{"code_idx":19,"before_size_id":3,"after_size_id":4},{"code_idx":39,"before_size_id":2,"after_size_id":4}]},"prove_threshold":{"profilees":[{"code_idx":21,"before_size_id":0,"after_size_id":0},{"code_idx":22,"before_size_id":0,"after_size_id":1},{"code_idx":23,"before_size_id":0,"after_size_id":2},{"code_idx":27,"before_size_id":0,"after_size_id":2},{"code_idx":28,"before_size_id":2,"after_size_id":3},{"code_idx":29,"before_size_id":2,"after_size_id":4}]},"calculate_offset_percentage":{"profilees":[{"code_idx":43,"before_size_id":0,"after_size_id":1},{"code_idx":44,"before_size_id":1,"after_size_id":1},{"code_idx":45,"before_size_id":1,"after_size_id":2},{"code_idx":46,"before_size_id":1,"after_size_id":3},{"code_idx":47,"before_size_id":0,"after_size_id":3}]}}
, 'instruction_locations':
{"prove_sema_compliance":{"Known":[{"line":121,"column":4},{"line":121,"column":18}]},"init_sema_report":{"Known":[{"line":84,"column":4},{"line":84,"column":18}]},"add_together":{"Known":[{"line":171,"column":4},{"line":171,"column":18}]},"prove_threshold":{"Known":[{"line":59,"column":4},{"line":59,"column":18}]},"update_sema_report":{"Known":[{"line":98,"column":4},{"line":98,"column":18}]},"update_emissions":{"Known":[{"line":36,"column":4},{"line":36,"column":18}]},"calculate_offset_percentage":{"Known":[{"line":145,"column":4},{"line":145,"column":18}]},"init_emissions_certificate":{"Known":[{"line":22,"column":4},{"line":22,"column":18}]}}
};
